// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.sut.test.web;

import com.sut.test.domain.Sample;
import com.sut.test.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<Sample, String> ApplicationConversionServiceFactoryBean.getSampleToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<com.sut.test.domain.Sample, java.lang.String>() {
            public String convert(Sample sample) {
                return "(no displayable fields)";
            }
        };
    }
    
    public Converter<Long, Sample> ApplicationConversionServiceFactoryBean.getIdToSampleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, com.sut.test.domain.Sample>() {
            public com.sut.test.domain.Sample convert(java.lang.Long id) {
                return Sample.findSample(id);
            }
        };
    }
    
    public Converter<String, Sample> ApplicationConversionServiceFactoryBean.getStringToSampleConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, com.sut.test.domain.Sample>() {
            public com.sut.test.domain.Sample convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), Sample.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getSampleToStringConverter());
        registry.addConverter(getIdToSampleConverter());
        registry.addConverter(getStringToSampleConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
